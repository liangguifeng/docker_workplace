services:
  php-74:
    container_name: php-74
    working_dir: ${BACKEND_ROOT}
    ports:
      - 19074:9000
    build:
      context: php-74
    networks:
      - workplace
    volumes:
      - ${BACKEND_ROOT}:${BACKEND_ROOT}
      - ./php-74/config/php.ini:/usr/local/etc/php/php.ini
      - ./php-74/config/fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./php-74/entrypoint.sh:/entrypoint.sh
      - ./php-74/config/conf.d:/usr/local/etc/php/conf.d
      - ./logs:/logs
      - ./.zshrc:/root/.zshrc
    environment:
      TZ: ${TZ}
      BACKEND_ROOT: ${BACKEND_ROOT}
    entrypoint: /entrypoint.sh

  php-81:
    container_name: php-81
    working_dir: ${BACKEND_ROOT}
    ports:
      - 19081:9000
      - 19501:9501
    build:
      context: php-81
    networks:
      - workplace
    volumes:
      - ${BACKEND_ROOT}:${BACKEND_ROOT}
      - ./php-81/config/php.ini:/usr/local/etc/php/php.ini
      - ./php-81/config/fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./php-81/entrypoint.sh:/entrypoint.sh
      - ./php-81/config/conf.d:/usr/local/etc/php/conf.d
      - ./logs:/logs
      - ./.zshrc:/root/.zshrc
    environment:
      TZ: ${TZ}
      BACKEND_ROOT: ${BACKEND_ROOT}
    entrypoint: /entrypoint.sh

  nginx:
    container_name: nginx
    working_dir: /etc/nginx/conf.d
    ports:
      - 12100:80
    build:
      context: nginx
    depends_on:
      - php-74
      - php-81
      - redis
    networks:
      workplace:
        aliases:
          # 希望能在容器中互相访问，则可以给nginx设置别名，让容器访问下面url时，会访问到nginx容器，然后nginx解析后，会到达对应的php容器
          - outlet-frontend.hltmsp.test
          - outlet-backend.hltmsp.test
          - hyg-api.hltmsp.test
          - hyg-pay.hltmsp.test
          - hyg-openapi.hltmsp.test
          - hyg-admin.hltmsp.test
          - datacenter.hltmsp.test
    volumes:
      - ${BACKEND_ROOT}:${BACKEND_ROOT}
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/entrypoint.sh:/entrypoint.sh
      - ./logs:/logs
    environment:
      TZ: ${TZ}
      VHOST_LISTEN_ADDRESS: localhost
      BACKEND_ROOT: ${BACKEND_ROOT}
    entrypoint: /entrypoint.sh

  redis:
    image: redis:5-alpine
    container_name: redis
    working_dir: /etc
    volumes:
      - redis:/data
      - ./redis/redis.conf:/redis.conf
    ports:
      - 12200:6379
    networks:
      - workplace
    command: ['redis-server', '/redis.conf']

networks:
  workplace:
    driver: bridge

volumes:
  redis:
